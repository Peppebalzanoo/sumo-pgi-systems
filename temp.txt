# parkingID = get_parking_from_lane(curr_laneID)
# if parkingID is not None and check_parking_aviability(parkingID) is True and check_parking_position(vecID, curr_position, parkingID) is True:
#     try:
#         # (900sec == 10min, 10800sec == 3hrs)
#         # ! random_parking_time = random.randint(900, 10800)
#
#         if is_parking_already_setted(vecID, parkingID) is False:
#             traci.vehicle.setParkingAreaStop(vecID, parkingID, 3)
#             # Salvo il parcheggio
#             vecID_to_parkingID_dictionary[vecID] = parkingID
#
#     except traci.TraCIException as e:
#         pass
-------------------------------------------------------------------------------------------------------------------------------------------------------
ROUTINE
# parkingID = get_parking_from_lane(last_laneID_excpected)
        # if parkingID is not None and check_parking_aviability(parkingID) is True:
        #     try:
        #         # (900sec == 10min, 10800sec == 3hrs)
        #         # ! random_parking_time = random.randint(900, 10800)
        #         if is_parking_already_setted(vecID, parkingID) is False:
        #             traci.vehicle.setParkingAreaStop(vecID, parkingID, 3)
        #             # Salvo il parcheggio
        #             vecID_to_parkingID_dictionary[vecID] = parkingID
        #     except traci.TraCIException as e:
        #         calculate_parkings(vecID, curr_edgeID, last_edgeID, expected_index)
        # else:
        #     # Se non c'è parcheggio OPPURE se non ci sono posti disponibili
        #     calculate_parkings(vecID, curr_edgeID, last_edgeID, expected_index)
------------------------------------------------------------------------------------------------------------------------------------------------------
# ! Commentato temporanemante ####################################################################################
        # print(" Il veicolo", vecID, "sta calcolando i parcheggi disponibili nell'area corrente di ricerca...")
        # list_aviable_lane = get_available_lanes(vecID)
        # list_desc_parking = get_ordred_parkings(list_aviable_lane)
        # vecID_to_list_parking_index[vecID] = (list_desc_parking, 0)
        # ! ####################################################################################
-------------------------------------------------------------------------------------------------------------------------------------------------------
 parking_capacity = int(traci.simulation.getParameter(parkingID, "parkingArea.capacity"))
 parking_occupancy = int(traci.simulation.getParameter(parkingID, "parkingArea.occupancy"))
-------------------------------------------------------------------------------------------------------------------------------------------------------
<vehicle id="0" type="vecType" depart="18000">
        <route edges="123867455 8920391#0 255330048 255351721#0 -27656675 26943623 -111550911#3 -111550911#2 -111550911#1 -111550911#0 -88559680#5 255330036#10 255330036#11"/>
    </vehicle>
-------------------------------------------------------------------------------------------------------------------------------------------------------
# STRATEGIA: strategia1, SCENARIO: 5% #
SU UN TOTALE DI 150 VEICOLO, HANNO PARCHEGGIATO: 144 , NON HANNO PARCHEGGIATO: 6
Lunghezza media: 7641.33
Duarata media: 1047.46
Velocità media: 7.64
count_between_0_and_5min: 15
count_between_5_and_10min: 93
count_plus_10min: 36

# STRATEGIA: strategia2, SCENARIO: 5% #
SU UN TOTALE DI 150 VEICOLO, HANNO PARCHEGGIATO: 150 , NON HANNO PARCHEGGIATO: 0
Lunghezza media: 7582.75
Duarata media: 1061.38
Velocità media: 7.51
count_between_0_and_5min: 16
count_between_5_and_10min: 92
count_plus_10min: 42

# STRATEGIA: strategia3, SCENARIO: 5% #
SU UN TOTALE DI 150 VEICOLO, HANNO PARCHEGGIATO: 150 , NON HANNO PARCHEGGIATO: 0
Lunghezza media: 7582.75
Duarata media: 1061.38
Velocità media: 7.51
count_between_0_and_5min: 16
count_between_5_and_10min: 92
count_plus_10min: 42
-------------------------------------------------------------------------------------------------------------------------------------------------------
# STRATEGIA: strategia1, SCENARIO: 5% #
SU UN TOTALE DI 150 VEICOLO, HANNO PARCHEGGIATO: 145 , NON HANNO PARCHEGGIATO: 5
Lunghezza media: 7578.63
Duarata media: 1043.53
Velocità media: 7.61
count_between_0_and_5min: 16
count_between_5_and_10min: 97
count_plus_10min: 32

# STRATEGIA: strategia2, SCENARIO: 5% #
SU UN TOTALE DI 150 VEICOLO, HANNO PARCHEGGIATO: 150 , NON HANNO PARCHEGGIATO: 0
Lunghezza media: 7582.75
Duarata media: 1061.38
Velocità media: 7.51
count_between_0_and_5min: 16
count_between_5_and_10min: 92
count_plus_10min: 42

# STRATEGIA: strategia3, SCENARIO: 5% #
SU UN TOTALE DI 150 VEICOLO, HANNO PARCHEGGIATO: 150 , NON HANNO PARCHEGGIATO: 0
Lunghezza media: 7582.75
Duarata media: 1061.38
Velocità media: 7.51
count_between_0_and_5min: 16
count_between_5_and_10min: 92
count_plus_10min: 42

# STRATEGIA: strategia1, SCENARIO: 5% #
SU UN TOTALE DI 150 VEICOLO, HANNO PARCHEGGIATO: 142 , NON HANNO PARCHEGGIATO: 8
Lunghezza media: 7704.4
Duarata media: 1794.62
Velocità media: 4.43
count_between_0_and_5min: 30
count_between_5_and_10min: 73
count_plus_10min: 39
-------------------------------------------------------------------------------------------------------------------------------------------------------
# STRATEGIA: strategia2, SCENARIO: 5% #
SU UN TOTALE DI 150 VEICOLO, HANNO PARCHEGGIATO: 150 , NON HANNO PARCHEGGIATO: 0
Lunghezza media: 7671.94
Duarata media: 1858.78
Velocità media: 4.16
count_between_0_and_5min: 30
count_between_5_and_10min: 77
count_plus_10min: 43

# STRATEGIA: strategia3, SCENARIO: 5% #
SU UN TOTALE DI 150 VEICOLO, HANNO PARCHEGGIATO: 150 , NON HANNO PARCHEGGIATO: 0
Lunghezza media: 7677.75
Duarata media: 1860.99
Velocità media: 4.16
count_between_0_and_5min: 30
count_between_5_and_10min: 78
count_plus_10min: 42